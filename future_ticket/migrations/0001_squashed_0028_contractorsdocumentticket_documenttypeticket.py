# Generated by Django 3.2.8 on 2023-08-25 09:37

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import future_ticket.models


class Migration(migrations.Migration):

    replaces = [('future_ticket', '0001_initial'), ('future_ticket', '0002_edcenterticketindicator_ticketedcenteremployeeposition_ticketindicator_ticketprojectposition'), ('future_ticket', '0003_auto_20230525_1332'), ('future_ticket', '0004_alter_ticketedcenteremployeeposition_position'), ('future_ticket', '0005_auto_20230525_1410'), ('future_ticket', '0006_profenviroment_programauthor_ticketprofession_ticketprogram'), ('future_ticket', '0007_auto_20230527_1916'), ('future_ticket', '0008_alter_ticketprogram_workshops'), ('future_ticket', '0009_auto_20230529_1348'), ('future_ticket', '0010_auto_20230529_1508'), ('future_ticket', '0011_auto_20230530_1413'), ('future_ticket', '0012_alter_ticketprogram_description'), ('future_ticket', '0013_auto_20230531_1047'), ('future_ticket', '0014_auto_20230531_1202'), ('future_ticket', '0015_rename_qouta_ticketquota_quota'), ('future_ticket', '0016_ticketprojectyear_is_disability'), ('future_ticket', '0017_auto_20230531_1637'), ('future_ticket', '0018_ticketprofession_is_centers'), ('future_ticket', '0019_auto_20230601_1305'), ('future_ticket', '0020_educationcenterticketprojectyear_application_file'), ('future_ticket', '0021_educationcenterticketprojectyear_appl_track_number'), ('future_ticket', '0022_auto_20230601_1547'), ('future_ticket', '0023_auto_20230602_1056'), ('future_ticket', '0024_auto_20230602_1331'), ('future_ticket', '0025_auto_20230613_1734'), ('future_ticket', '0026_schoolprojectyear'), ('future_ticket', '0027_alter_ticketprogram_age_groups'), ('future_ticket', '0028_contractorsdocumentticket_documenttypeticket')]

    initial = True

    dependencies = [
        ('citizens', '0004_auto_20230530_1549'),
        ('education_centers', '0045_educationprogram_is_bvb'),
        ('education_centers', '0046_auto_20230527_1845'),
        ('citizens', '0006_remove_citizen_aplication_stages'),
        ('education_centers', '0044_auto_20230518_1017'),
        ('education_centers', '0049_auto_20230616_1519'),
        ('education_centers', '0047_teacher_bvb_experience'),
        ('users', '0002_auto_20230825_1335'),
    ]

    operations = [
        migrations.CreateModel(
            name='TicketProjectYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(verbose_name='год')),
                ('programs', models.ManyToManyField(blank=True, related_name='ticket_project_years', to='education_centers.EducationProgram', verbose_name='Программы')),
            ],
            options={
                'verbose_name': 'Год проекта (БВБ)',
                'verbose_name_plural': 'Годы проекта (БВБ)',
            },
        ),
        migrations.CreateModel(
            name='TicketProjectPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(max_length=50, verbose_name='Название позиции')),
                ('is_basis_needed', models.BooleanField(default=False, verbose_name='Нужно основание?')),
                ('project_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='future_ticket.ticketprojectyear', verbose_name='Год проекта')),
            ],
            options={
                'verbose_name': 'Позиция в проекте',
                'verbose_name_plural': 'Позиции в проекте',
            },
        ),
        migrations.CreateModel(
            name='TicketIndicator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Показатель эффективности')),
                ('is_free_form', models.BooleanField(default=False, verbose_name='Свободная форма?')),
                ('project_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indicators', to='future_ticket.ticketprojectyear', verbose_name='Год проекта')),
            ],
            options={
                'verbose_name': 'Показатель эффективности',
                'verbose_name_plural': 'Показатели эффективности',
            },
        ),
        migrations.CreateModel(
            name='ProfEnviroment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название среды')),
            ],
            options={
                'verbose_name': 'Профессиональная среда',
                'verbose_name_plural': 'Профессиональные среды',
            },
        ),
        migrations.CreateModel(
            name='ProgramAuthor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=120, verbose_name='Телефон')),
                ('email', models.EmailField(max_length=254, verbose_name='email address')),
                ('teacher', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='author', to='education_centers.teacher', verbose_name='Педагог')),
            ],
            options={
                'verbose_name': 'Автор программы',
                'verbose_name_plural': 'Авторы программ',
            },
        ),
        migrations.CreateModel(
            name='TicketProfession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Название профессии')),
                ('prof_enviroment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profession', to='future_ticket.profenviroment', verbose_name='Среда')),
                ('is_federal', models.BooleanField(default=False, verbose_name='Федеральная?')),
                ('is_centers', models.BooleanField(default=False, verbose_name='Создана ЦО?')),
            ],
            options={
                'verbose_name': 'Профессия',
                'verbose_name_plural': 'Профессии',
            },
        ),
        migrations.CreateModel(
            name='TicketProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('education_form', models.CharField(choices=[('FLL', 'Очный'), ('FLLLN', 'Очный с применением ДОТ')], max_length=5, verbose_name='Формат обучения')),
                ('description', models.CharField(blank=True, max_length=300, null=True, verbose_name='Краткое описание задания')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='programs', to='future_ticket.programauthor', verbose_name='Автор программы')),
                ('disability_types', models.ManyToManyField(blank=True, to='users.DisabilityType', verbose_name='ОВЗ')),
                ('ed_center', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ticket_programs', to='education_centers.educationcenter', verbose_name='Центр обучения')),
                ('profession', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='programs', to='future_ticket.ticketprofession', verbose_name='Профессия')),
                ('teachers', models.ManyToManyField(related_name='ticket_programs', to='education_centers.Teacher', verbose_name='педагоги')),
                ('workshops', models.ManyToManyField(related_name='ticket_programs', to='education_centers.Workshop', verbose_name='аудитории')),
                ('status', models.CharField(choices=[('NEW', 'Новая'), ('PRWD', 'Подтверждённая')], default='NEW', max_length=5, verbose_name='Статус программы')),
            ],
            options={
                'verbose_name': 'Программа (БВБ)',
                'verbose_name_plural': 'Программы (БВБ)',
            },
        ),
        migrations.AlterField(
            model_name='ticketprojectyear',
            name='programs',
            field=models.ManyToManyField(blank=True, related_name='ticket_project_years', to='future_ticket.TicketProgram', verbose_name='Программы'),
        ),
        migrations.CreateModel(
            name='AgeGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Название профессии')),
            ],
            options={
                'verbose_name': 'Возрастная группа',
                'verbose_name_plural': 'Возрастные группы',
            },
        ),
        migrations.AddField(
            model_name='ticketprogram',
            name='age_groups',
            field=models.ManyToManyField(related_name='programs', to='future_ticket.AgeGroup', verbose_name='Возрастная категория'),
        ),
        migrations.AlterField(
            model_name='ticketprogram',
            name='description',
            field=models.TextField(blank=True, null=True, verbose_name='Краткое описание задания'),
        ),
        migrations.CreateModel(
            name='EdCenterTicketIndicator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('free_form_value', models.TextField(blank=True, default='', null=True, verbose_name='Значение (свободная форма)')),
                ('ed_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_indicators', to='education_centers.educationcenter', verbose_name='Центр обучения')),
                ('indicator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ed_centers', to='future_ticket.ticketindicator', verbose_name='Показатель')),
                ('value', models.CharField(default='', max_length=25, verbose_name='Значение показателя')),
            ],
            options={
                'verbose_name': 'Показатель эффективности (ЦО)',
                'verbose_name_plural': 'Показатели эффективности (ЦО)',
            },
        ),
        migrations.CreateModel(
            name='TicketEdCenterEmployeePosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acts_basis', models.CharField(blank=True, max_length=500, null=True, verbose_name='Действует на основании')),
                ('ed_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_positions_employees', to='education_centers.educationcenter', verbose_name='Центр обучения')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_positions', to='education_centers.employee', verbose_name='Сотрудник')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions_employees', to='future_ticket.ticketprojectposition', verbose_name='Позиция')),
            ],
            options={
                'verbose_name': 'Роль сотрудника',
                'verbose_name_plural': 'Роли сотрудников',
            },
        ),
        migrations.AlterModelOptions(
            name='ticketprogram',
            options={'verbose_name': 'Программа', 'verbose_name_plural': 'Программы'},
        ),
        migrations.AlterModelOptions(
            name='ticketprojectyear',
            options={'verbose_name': 'Год проекта', 'verbose_name_plural': 'Годы проекта'},
        ),
        migrations.CreateModel(
            name='TicketFullQuota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_quota', models.IntegerField(default=0, verbose_name='Полная квота')),
                ('federal_quota', models.IntegerField(default=0, verbose_name='Федеральная квота')),
                ('project_year', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='quota', to='future_ticket.ticketprojectyear', verbose_name='Год проекта')),
            ],
            options={
                'verbose_name': 'Квота региона',
                'verbose_name_plural': 'Квоты региона',
            },
        ),
        migrations.AddField(
            model_name='ticketprogram',
            name='program_link',
            field=models.CharField(blank=True, max_length=500, null=True, verbose_name='Ссылка на программу'),
        ),
        migrations.CreateModel(
            name='TicketQuota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_federal', models.BooleanField(default=False, verbose_name='Федеральная?')),
                ('value', models.IntegerField(default=0, verbose_name='Квота')),
                ('ed_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_quotas', to='education_centers.educationcenter', verbose_name='Центр обучения')),
                ('profession', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quotas', to='future_ticket.ticketprofession', verbose_name='Профессия')),
                ('quota', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quotas', to='future_ticket.ticketfullquota', verbose_name='Квота')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_quotas', to='citizens.school', verbose_name='Школа')),
                ('approved_value', models.IntegerField(default=0, verbose_name='Одобренная квота')),
            ],
            options={
                'verbose_name': 'Квота',
                'verbose_name_plural': 'Квоты',
            },
        ),
        migrations.CreateModel(
            name='EducationCenterTicketProjectYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appl_docs_link', models.TextField(blank=True, default='', null=True, verbose_name='Ссылка на комп. документов')),
                ('stage', models.CharField(choices=[('FLLNG', 'заполнение'), ('FLLD', 'на проверке'), ('RWRK', 'отправлена на доработку'), ('VRFD', 'проверена'), ('FRMD', 'сформирована'), ('DWNLD', 'подгружена'), ('PRVD', 'принята')], default='FLLNG', max_length=5, verbose_name='Работа с заявкой')),
                ('ed_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_project_years', to='education_centers.educationcenter', verbose_name='Центр обучения')),
                ('project_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ed_centers', to='future_ticket.ticketprojectyear', verbose_name='Год проекта (БВБ)')),
                ('step_1_check', models.BooleanField(default=False, verbose_name='Шаг 1. Проверка')),
                ('step_1_commentary', models.TextField(blank=True, default='', null=True, verbose_name='Шаг 1. Комментарий')),
                ('step_2_check', models.BooleanField(default=False, verbose_name='Шаг 2. Проверка')),
                ('step_2_commentary', models.TextField(blank=True, default='', null=True, verbose_name='Шаг 2. Комментарий')),
                ('step_3_check', models.BooleanField(default=False, verbose_name='Шаг 3. Проверка')),
                ('step_3_commentary', models.TextField(blank=True, default='', null=True, verbose_name='Шаг 3. Комментарий')),
                ('step_4_check', models.BooleanField(default=False, verbose_name='Шаг 4. Проверка')),
                ('step_4_commentary', models.TextField(blank=True, default='', null=True, verbose_name='Шаг 4. Комментарий')),
                ('step_5_check', models.BooleanField(default=False, verbose_name='Шаг 5. Проверка')),
                ('step_5_commentary', models.TextField(blank=True, default='', null=True, verbose_name='Шаг 5. Комментарий')),
                ('step_6_check', models.BooleanField(default=False, verbose_name='Шаг 6. Проверка')),
                ('step_6_commentary', models.TextField(blank=True, default='', null=True, verbose_name='Шаг 6. Комментарий')),
                ('programs', models.ManyToManyField(blank=True, related_name='ticket_centers_project_years', to='future_ticket.TicketProgram', verbose_name='Программы')),
                ('is_disability', models.BooleanField(default=False, verbose_name='ОВЗ?')),
                ('application_file', models.FileField(blank=True, null=True, upload_to=future_ticket.models.EducationCenterTicketProjectYear.doc_directory_path, verbose_name='Скан заявки')),
                ('appl_track_number', models.CharField(blank=True, max_length=150, null=True, verbose_name='Трек номер')),
                ('step_8_check', models.BooleanField(default=False, verbose_name='Шаг 8. Проверка')),
                ('step_8_commentary', models.TextField(blank=True, default='', null=True, verbose_name='Шаг 8. Комментарий')),
                ('is_ndc', models.BooleanField(default=False, verbose_name='Платит НДС?')),
                ('none_ndc_reason', models.CharField(blank=True, default='', max_length=500, null=True, verbose_name='Основание работы без НДС')),
            ],
            options={
                'verbose_name': 'Данные колледжа на год',
                'verbose_name_plural': 'Данные колледжей на годы',
            },
        ),
        migrations.AlterField(
            model_name='ticketprogram',
            name='teachers',
            field=models.ManyToManyField(blank=True, related_name='ticket_programs', to='education_centers.Teacher', verbose_name='педагоги'),
        ),
        migrations.AlterField(
            model_name='ticketprogram',
            name='workshops',
            field=models.ManyToManyField(blank=True, related_name='ticket_programs', to='education_centers.Workshop', verbose_name='аудитории'),
        ),
        migrations.CreateModel(
            name='SchoolProjectYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resp_full_name', models.CharField(max_length=250, verbose_name='ФИО ответственного')),
                ('resp_position', models.CharField(max_length=100, verbose_name='Должность')),
                ('phone', models.CharField(max_length=120, verbose_name='Телефон')),
                ('email', models.EmailField(max_length=254, verbose_name='email address')),
                ('resp_order', models.FileField(upload_to=future_ticket.models.SchoolProjectYear.template_directory_path, verbose_name='Приказ')),
                ('project_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schools', to='future_ticket.ticketprojectyear', verbose_name='Год проекта (БВБ)')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_project_years', to='citizens.school', verbose_name='Школа')),
            ],
            options={
                'verbose_name': 'Школа (год проекта)',
                'verbose_name_plural': 'Школы (годы проекта)',
            },
        ),
        migrations.AlterField(
            model_name='ticketprogram',
            name='age_groups',
            field=models.ManyToManyField(related_name='programs', to='future_ticket.AgeGroup', verbose_name='Возрастные категории'),
        ),
        migrations.CreateModel(
            name='DocumentTypeTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Тип документа')),
                ('stage', models.CharField(choices=[('GRMNT', 'Договорные'), ('CLS', 'Закрывающие'), ('PRV', 'Подтверждающие')], max_length=6, verbose_name='Этап')),
                ('template', models.FileField(upload_to=future_ticket.models.DocumentTypeTicket.template_directory_path, verbose_name='Документ')),
                ('project_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='docs_templates', to='future_ticket.ticketprojectyear', verbose_name='Год проекта (БВБ)')),
            ],
            options={
                'verbose_name': 'Шаблон документов (БВБ)',
                'verbose_name_plural': 'Шаблоны документов (БВБ)',
            },
        ),
        migrations.CreateModel(
            name='ContractorsDocumentTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Дата создания')),
                ('register_number', models.IntegerField(verbose_name='Номер в реестре')),
                ('doc_stage', models.CharField(choices=[('CRTD', 'Создан'), ('CHCKD', 'Проверен'), ('SGND', 'Подписан'), ('SGNDAP', 'Подписан и проверен')], default='CRTD', max_length=6, verbose_name='Стадия')),
                ('doc_file', models.FileField(upload_to=future_ticket.models.ContractorsDocumentTicket.doc_directory_path, verbose_name='Документ')),
                ('contractor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_docs', to='education_centers.educationcenter', verbose_name='подрядчик')),
                ('doc_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='future_ticket.documenttypeticket', verbose_name='Тип документа')),
                ('parent_doc', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children_docs', to='future_ticket.contractorsdocumentticket', verbose_name='Родительский документ')),
            ],
            options={
                'verbose_name': 'Документ с подрядчиком (БВБ)',
                'verbose_name_plural': 'Документы с подрядчиками (БВБ)',
            },
        ),
    ]
