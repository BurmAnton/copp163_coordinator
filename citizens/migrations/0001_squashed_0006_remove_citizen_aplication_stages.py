# Generated by Django 3.2.8 on 2023-08-25 09:51

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('citizens', '0001_initial'), ('citizens', '0002_auto_20230330_1206'), ('citizens', '0003_auto_20230330_1240'), ('citizens', '0004_auto_20230530_1549'), ('citizens', '0005_auto_20230616_1519'), ('citizens', '0006_remove_citizen_aplication_stages')]

    initial = True

    dependencies = [
        ('regions', '__first__'),
        ('education_centers', '0001_squashed_0049_auto_20230616_1519'),
        ('regions', '0001_initial'),
        ('education_centers', '0003_auto_20230330_1206'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DisabilityType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='ОВЗ')),
                ('description', models.CharField(blank=True, max_length=300, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Инвалидность',
                'verbose_name_plural': 'Инвалидности',
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название школы')),
                ('specialty', models.CharField(blank=True, max_length=50, null=True, verbose_name='Уклон школы')),
                ('territorial_administration', models.CharField(blank=True, choices=[('TADM', 'Тольяттинское управление'), ('NWADM', 'Северо-Западное управление'), ('WADM', 'Западное управление'), ('SWADM', 'Юго-Западное управление'), ('POVADM', 'Поволжское управление'), ('SADM', 'Южное управление'), ('DEPSAM', 'Департамент образования г.о. Самара'), ('SEADM', 'Юго-Восточное управление'), ('OTRADM', 'Отрадненское управление'), ('CENTADM', 'Центральное управление'), ('NEADM', 'Северо-Восточное управление'), ('DEPTOL', 'Департамент образования г.о. Тольятти'), ('NADM', 'Северное управление'), ('KINADM', 'Кинельское управление'), ('SAMADM', 'Самарское управление')], max_length=20, null=True, verbose_name='Тер. управление')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='Населённый пункт')),
                ('adress', models.CharField(blank=True, max_length=250, null=True, verbose_name='Адрес')),
                ('is_bilet', models.BooleanField(default=False, verbose_name='Есть педагог-навигатор')),
                ('inn', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='ИНН')),
                ('school_coordinators', models.ManyToManyField(blank=True, related_name='coordinated_schools', to=settings.AUTH_USER_MODEL, verbose_name='Педагоги-навигаторы')),
            ],
            options={
                'verbose_name': 'Школа',
                'verbose_name_plural': 'Школы',
            },
        ),
        migrations.CreateModel(
            name='Citizen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=50, null=True, verbose_name='Фамилия')),
                ('middle_name', models.CharField(blank=True, max_length=60, null=True, verbose_name='Отчество')),
                ('sex', models.CharField(blank=True, choices=[('M', 'Мужской'), ('F', 'Женский')], max_length=1, null=True, verbose_name='Пол')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('email', models.EmailField(blank=True, max_length=320, null=True, verbose_name='Email')),
                ('phone_number', models.CharField(blank=True, max_length=40, null=True, verbose_name='Номер телефона')),
                ('snils_number', models.CharField(blank=True, max_length=11, null=True, verbose_name='Номер СНИЛС')),
                ('inn_number', models.CharField(blank=True, max_length=30, null=True, verbose_name='ИНН')),
                ('res_region', models.CharField(blank=True, max_length=150, null=True, verbose_name='Регион проживания')),
                ('res_city', models.CharField(blank=True, max_length=250, null=True, verbose_name='Населённый пункт')),
                ('res_disctrict', models.CharField(blank=True, max_length=50, null=True, verbose_name='Населённый пункт')),
                ('social_status', models.CharField(blank=True, choices=[('SCHT', 'Учитель в школе'), ('SCHS', 'Обучающиеся общеообразовательных организаций'), ('SSPO', 'студент СПО'), ('SVO', 'студент ВО'), ('EMP', 'Cотрудник предприятия'), ('SC', 'Гражданин предпенсионного возраста'), ('50+', 'Гражданин старше 50-ти лет'), ('UEMP', 'Безработный гражданин (статус ЦЗН)'), ('EMPS', 'Гражданин, ищущий работу (статус ЦЗН)'), ('OTHR', 'Другой')], max_length=4, null=True, verbose_name='Социальный статус')),
                ('education_type', models.CharField(blank=True, choices=[('SPVO', 'СПО/ВО'), ('STDN', 'Cтудент ВО/СПО'), ('SCHL', 'Школа'), ('OTHR', 'Другой')], max_length=4, null=True, verbose_name='Образование')),
                ('self_employed', models.BooleanField(default=False, verbose_name='Самозанятый')),
                ('is_employed', models.BooleanField(default=False, verbose_name='Трудоустроен')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Верифицирован')),
                ('copp_registration', models.BooleanField(default=False, verbose_name='Зарегистрирован на copp63.ru')),
                ('disability_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='citizens.disabilitytype', verbose_name='ОВЗ')),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='students', to='citizens.school', verbose_name='Школа')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='citizen', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Гражданин',
                'verbose_name_plural': 'Граждане',
            },
        ),
        migrations.CreateModel(
            name='Municipality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Муниципалитет',
                'verbose_name_plural': 'Муниципалитеты',
            },
        ),
        migrations.AddField(
            model_name='school',
            name='municipality',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='schools', to='citizens.municipality', verbose_name='Муниципалитет'),
        ),
    ]
