# Generated by Django 4.0.6 on 2022-08-29 10:02

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('citizens', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(blank=True, null=True, verbose_name='ID')),
                ('creation_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Дата создания')),
                ('admit_status', models.CharField(choices=[('RECA', 'Заявка получена'), ('CONT', 'Связались/Ждём документы'), ('RECD', 'Получили часть документов'), ('CONF', 'Подтвердили статус'), ('ADM', 'Допустили на платформе'), ('REF', 'Отказали')], default='RECA', max_length=4, verbose_name='Работа с заявкой')),
                ('appl_status', models.CharField(choices=[('NEW', 'Новая заявка'), ('VER', 'Верификация'), ('ADM', 'Допущен'), ('SED', 'Начал обучение'), ('EXAM', 'Направлен на экзамен'), ('COMP', 'Завершил обучение'), ('NCOM', 'Заявка отменена'), ('NADM', 'Отклонено'), ('RES', 'Резерв'), ('OTH', 'Другой ФО'), ('DUPL', 'Дубликат')], default='NEW', max_length=4, verbose_name='Статус заявки')),
                ('change_status_date', models.DateTimeField(null=True, verbose_name='Дата последней смены статуса')),
                ('category', models.CharField(choices=[('EMPS', 'Граждане, ищущие работу и обратившиеся в органы службы занятости, включая безработных граждан'), ('JOBS', 'Ищущий работу'), ('UEMP', 'Безработный'), ('VACK', 'Женщины, находящиеся в отпуске по уходу за ребенком в возрасте до трех лет'), ('SCHK', 'Женщины, имеющие детей дошкольного возраста и не состоящие в трудовых отношениях'), ('50+', 'Граждане в возрасте 50-ти лет и старше'), ('SC', 'Граждане предпенсионного возраста')], default='EMPS', max_length=50, verbose_name='Категория слушателя')),
                ('distance_education', models.BooleanField(default=False, verbose_name='Дистанционное обучение')),
                ('contract_type', models.CharField(choices=[('OLD', 'Трехсторонний договор со старым работодателем'), ('NEW', 'Трехсторонний договор с новым работодателем'), ('SELF', 'Двухсторонный договор'), ('NOT', 'Без договора'), ('–', '-')], default='–', max_length=4, verbose_name='Тип контракта')),
                ('ed_ready_time', models.CharField(blank=True, choices=[('CG', 'В планируемой группе'), ('NG', 'В следующей группе'), ('OCT', 'В октябре'), ('NOV', 'В ноябре'), ('NY', 'В следующем году'), ('ALR', 'Уже зачислен'), ('ltr_month', 'Позднее чем через месяц'), ('month', 'В течение месяца'), ('week', 'В течение 1 недели')], max_length=10, null=True, verbose_name='Хочет начать учиться')),
                ('consent_pers_data', models.BooleanField(default=False, verbose_name='Согласие на обработку перс. данных')),
                ('pasport', models.BooleanField(default=False, verbose_name='Копия паспорт')),
                ('education_document', models.BooleanField(default=False, verbose_name='Копия документа об образ./справка об обучении')),
                ('resume', models.BooleanField(default=False, verbose_name='Резюме')),
                ('worksearcher_certificate', models.BooleanField(default=False, verbose_name='Справка о регистрации в качестве лица, ищущего работу')),
                ('workbook', models.BooleanField(default=False, verbose_name='Копия трудовой книжки')),
                ('unemployed_certificate', models.BooleanField(default=False, verbose_name='Выписка о регистрации в качестве безработного')),
                ('senior_certificate', models.BooleanField(default=False, verbose_name='Справка об отнесении к категории пред пенсионера')),
                ('parental_leave_confirm', models.BooleanField(default=False, verbose_name='Копия документа, подтверждающего нахождение в отпуске по уходу за ребенком')),
                ('birth_certificate', models.BooleanField(default=False, verbose_name='Копия свидетельства о рождении ребенка')),
                ('birth_certificate_undr_seven', models.BooleanField(default=False, verbose_name='Копия свидетельства о рождении ребенка (младше 7 лет)')),
                ('notIP_certificate', models.BooleanField(default=False, verbose_name='Cправка об отсутствии статуса ИП')),
                ('ib_course', models.BooleanField(default=False, verbose_name='Курсы ИП')),
                ('is_enrolled', models.BooleanField(default=False, verbose_name='Приказ о зачисл.')),
                ('is_deducted', models.BooleanField(default=False, verbose_name='Приказ об отчисл.')),
                ('is_working', models.BooleanField(default=False, verbose_name='Трудоустроен до начала обучения')),
                ('find_work', models.CharField(blank=True, choices=[('CONT', 'Заключил договор'), ('CERT', 'Предоставил справку о самозанятости'), ('VACS', 'Подобраны вакансии'), ('DFI', 'Направлен на собеседование'), ('INTD', 'Прошел собеседование'), ('GAJ', 'Трудоустроился'), ('SWRK', 'Сохранил работу'), ('CRIP', 'Предоставил справку ИП')], max_length=4, null=True, verbose_name='Трудоустройство')),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='POE_applications', to='citizens.citizen', verbose_name='Заявитель')),
            ],
            options={
                'verbose_name': 'Заявка (Содействие занятости)',
                'verbose_name_plural': 'Заявки (Содействие занятости)',
            },
        ),
        migrations.CreateModel(
            name='CitizenCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=100, verbose_name='Название')),
                ('official_name', models.CharField(blank=True, max_length=500, verbose_name='Офицальное наименованние')),
            ],
            options={
                'verbose_name': 'Категория граждан',
                'verbose_name_plural': 'Категории граждан',
            },
        ),
        migrations.CreateModel(
            name='Questionnaire',
            fields=[
                ('applicant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='anketa', serialize=False, to='federal_empl_program.application')),
                ('convenient_study_periods', models.CharField(blank=True, choices=[('MRNG', '09.00-13.00'), ('DAYT', '13.00-17.00'), ('EVNG', '17.00-21.00')], max_length=4, null=True, verbose_name='Удобное время занятий')),
                ('purpose', models.CharField(blank=True, choices=[('RECA', 'Открытие своего дела (ИП или самозанятость)'), ('CONT', 'Сохранение текущего места работы'), ('RECD', 'Трудоустройство на новую работу'), ('CONF', 'Саморазвитие')], max_length=4, null=True, verbose_name='Цель')),
                ('need_consultation', models.BooleanField(default=False, verbose_name='Нужна ли консультация по самозаятости')),
                ('pref_contract_type', models.CharField(blank=True, choices=[('OLD', 'Трехсторонний договор со старым работодателем'), ('NEW', 'Трехсторонний договор с новым работодателем'), ('SELF', 'Двухсторонный договор'), ('NOT', 'Без договора')], max_length=4, null=True, verbose_name='Предпочитаемый тип контракта')),
            ],
            options={
                'verbose_name': 'Анкета',
                'verbose_name_plural': 'Анкета',
            },
        ),
        migrations.CreateModel(
            name='InteractionHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата')),
                ('interaction_date', models.DateField(default=django.utils.timezone.now, verbose_name='Дата')),
                ('comunication_type', models.CharField(choices=[('PHN', 'Телефон'), ('EML', 'Email'), ('OFF', 'Оффлайн')], max_length=3, verbose_name='Канал связи')),
                ('short_description', models.TextField(max_length=2000, verbose_name='Краткое описание')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interactions', to='federal_empl_program.application', verbose_name='История взаимодействия')),
            ],
            options={
                'verbose_name': 'Взаимодействие с гражданином',
                'verbose_name_plural': 'История взаимодействия',
                'get_latest_by': 'interaction_date',
            },
        ),
        migrations.CreateModel(
            name='CategoryInstruction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=150, verbose_name='Тема письма')),
                ('text', models.TextField(verbose_name='Текст')),
                ('html', models.TextField(verbose_name='HTML')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='instructions', to='federal_empl_program.citizencategory', verbose_name='категория')),
            ],
            options={
                'verbose_name': 'Инструкция',
                'verbose_name_plural': 'Инструкции',
            },
        ),
        migrations.AddField(
            model_name='application',
            name='citizen_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='application', to='federal_empl_program.citizencategory', verbose_name='категория'),
        ),
    ]
